//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Estreya.BlishHUD.EventTable.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Estreya.BlishHUD.EventTable.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding Colors to ColorPicker... ähnelt.
        /// </summary>
        internal static string BaseSettingsView_AddingColorsToColorPicker {
            get {
                return ResourceManager.GetString("BaseSettingsView_AddingColorsToColorPicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading ColorPicker... ähnelt.
        /// </summary>
        internal static string BaseSettingsView_LoadingColorPicker {
            get {
                return ResourceManager.GetString("BaseSettingsView_LoadingColorPicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading Colors... ähnelt.
        /// </summary>
        internal static string BaseSettingsView_LoadingColors {
            get {
                return ResourceManager.GetString("BaseSettingsView_LoadingColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Battle in Tarir ähnelt.
        /// </summary>
        internal static string event_auricBasin_battleInTarir {
            get {
                return ResourceManager.GetString("event-auricBasin-battleInTarir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defending Tarir ähnelt.
        /// </summary>
        internal static string event_auricBasin_defendingTarir {
            get {
                return ResourceManager.GetString("event-auricBasin-defendingTarir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trial by Fire ähnelt.
        /// </summary>
        internal static string event_auricBasin_trailByFire {
            get {
                return ResourceManager.GetString("event-auricBasin-trailByFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drakkar, the Ice Dragon&apos;s Champion ähnelt.
        /// </summary>
        internal static string event_bjoraMarches_drakkar {
            get {
                return ResourceManager.GetString("event-bjoraMarches-drakkar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storms of Winter ähnelt.
        /// </summary>
        internal static string event_bjoraMarches_stormsOfWinter {
            get {
                return ResourceManager.GetString("event-bjoraMarches-stormsOfWinter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cantha: Dawn ähnelt.
        /// </summary>
        internal static string event_canthaDayNight_dawn {
            get {
                return ResourceManager.GetString("event-canthaDayNight-dawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cantha: Day ähnelt.
        /// </summary>
        internal static string event_canthaDayNight_day {
            get {
                return ResourceManager.GetString("event-canthaDayNight-day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cantha: Dusk ähnelt.
        /// </summary>
        internal static string event_canthaDayNight_dusk {
            get {
                return ResourceManager.GetString("event-canthaDayNight-dusk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cantha: Night ähnelt.
        /// </summary>
        internal static string event_canthaDayNight_night {
            get {
                return ResourceManager.GetString("event-canthaDayNight-night", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Waypoint ähnelt.
        /// </summary>
        internal static string Event_CopyWaypoint {
            get {
                return ResourceManager.GetString("Event_CopyWaypoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Casino Blitz ähnelt.
        /// </summary>
        internal static string event_crystalOasis_casinoBlitz {
            get {
                return ResourceManager.GetString("event-crystalOasis-casinoBlitz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choya Pinata ähnelt.
        /// </summary>
        internal static string event_crystalOasis_choyaPinata {
            get {
                return ResourceManager.GetString("event-crystalOasis-choyaPinata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dawn ähnelt.
        /// </summary>
        internal static string event_dayNightCycle_dawn {
            get {
                return ResourceManager.GetString("event-dayNightCycle-dawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Day ähnelt.
        /// </summary>
        internal static string event_dayNightCycle_day {
            get {
                return ResourceManager.GetString("event-dayNightCycle-day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dusk ähnelt.
        /// </summary>
        internal static string event_dayNightCycle_dusk {
            get {
                return ResourceManager.GetString("event-dayNightCycle-dusk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Night ähnelt.
        /// </summary>
        internal static string event_dayNightCycle_night {
            get {
                return ResourceManager.GetString("event-dayNightCycle-night", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Search for Buried Treasure ähnelt.
        /// </summary>
        internal static string event_desertHighland_theSearchForBuriedTreasure {
            get {
                return ResourceManager.GetString("event-desertHighland-theSearchForBuriedTreasure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Junundu Rising ähnelt.
        /// </summary>
        internal static string event_desolation_jununduRising {
            get {
                return ResourceManager.GetString("event-desolation-jununduRising", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maws of Torment ähnelt.
        /// </summary>
        internal static string event_desolation_mawsOfTorment {
            get {
                return ResourceManager.GetString("event-desolation-mawsOfTorment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disable ähnelt.
        /// </summary>
        internal static string Event_Disable {
            get {
                return ResourceManager.GetString("Event_Disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dredgehaunt Cliffs ähnelt.
        /// </summary>
        internal static string event_dragonBash_dredgehauntCliffs {
            get {
                return ResourceManager.GetString("event-dragonBash-dredgehauntCliffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lornar&apos;s Pass ähnelt.
        /// </summary>
        internal static string event_dragonBash_lornarsPass {
            get {
                return ResourceManager.GetString("event-dragonBash-lornarsPass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Snowden Drifts ähnelt.
        /// </summary>
        internal static string event_dragonBash_snowdenDrifts {
            get {
                return ResourceManager.GetString("event-dragonBash-snowdenDrifts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wayfarer Foothills ähnelt.
        /// </summary>
        internal static string event_dragonBash_wayfarerFoothills {
            get {
                return ResourceManager.GetString("event-dragonBash-wayfarerFoothills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Jade Maw ähnelt.
        /// </summary>
        internal static string event_dragonsEnd_jadeMaw {
            get {
                return ResourceManager.GetString("event-dragonsEnd-jadeMaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preparations ähnelt.
        /// </summary>
        internal static string event_dragonsEnd_preparations {
            get {
                return ResourceManager.GetString("event-dragonsEnd-preparations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Battle for the Jade Sea ähnelt.
        /// </summary>
        internal static string event_dragonsEnd_theBattleForTheJadeSea {
            get {
                return ResourceManager.GetString("event-dragonsEnd-theBattleForTheJadeSea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advancing on the Blighting Towers ähnelt.
        /// </summary>
        internal static string event_dragonStand_advancingOnTheBlightingTowers {
            get {
                return ResourceManager.GetString("event-dragonStand-advancingOnTheBlightingTowers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Crash Site ähnelt.
        /// </summary>
        internal static string event_dryTop_crashSite {
            get {
                return ResourceManager.GetString("event-dryTop-crashSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sandstorm ähnelt.
        /// </summary>
        internal static string event_dryTop_sandstorm {
            get {
                return ResourceManager.GetString("event-dryTop-sandstorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Doppelganger ähnelt.
        /// </summary>
        internal static string event_elonRiverlands_doppelganger {
            get {
                return ResourceManager.GetString("event-elonRiverlands-doppelganger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Path to Ascension ähnelt.
        /// </summary>
        internal static string event_elonRiverlands_thePathToAscension {
            get {
                return ResourceManager.GetString("event-elonRiverlands-thePathToAscension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dragonstorm ähnelt.
        /// </summary>
        internal static string event_eotn_dragonstorm {
            get {
                return ResourceManager.GetString("event-eotn-dragonstorm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Twisted Marionette ähnelt.
        /// </summary>
        internal static string event_eotn_twistedMarionette {
            get {
                return ResourceManager.GetString("event-eotn-twistedMarionette", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dolyak Race ähnelt.
        /// </summary>
        internal static string event_festivalOfTheFourWinds_dolyakRace {
            get {
                return ResourceManager.GetString("event-festivalOfTheFourWinds-dolyakRace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skimmer Race ähnelt.
        /// </summary>
        internal static string event_festivalOfTheFourWinds_skimmerRace {
            get {
                return ResourceManager.GetString("event-festivalOfTheFourWinds-skimmerRace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Treasure Hunt ähnelt.
        /// </summary>
        internal static string event_festivalOfTheFourWinds_treasureHunt {
            get {
                return ResourceManager.GetString("event-festivalOfTheFourWinds-treasureHunt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A Concert for the Ages ähnelt.
        /// </summary>
        internal static string event_grothmar_concert {
            get {
                return ResourceManager.GetString("event-grothmar-concert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Haunting of Doomlore Shrine ähnelt.
        /// </summary>
        internal static string event_grothmar_doomloreShrine {
            get {
                return ResourceManager.GetString("event-grothmar-doomloreShrine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Ooze Pit Trials ähnelt.
        /// </summary>
        internal static string event_grothmar_oozePit {
            get {
                return ResourceManager.GetString("event-grothmar-oozePit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ceremony of the Sacred Flame ähnelt.
        /// </summary>
        internal static string event_grothmar_sacredFlame {
            get {
                return ResourceManager.GetString("event-grothmar-sacredFlame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your Mad King says... ähnelt.
        /// </summary>
        internal static string event_halloween_madKingSays {
            get {
                return ResourceManager.GetString("event-halloween-madKingSays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide Category ähnelt.
        /// </summary>
        internal static string Event_HideCategory {
            get {
                return ResourceManager.GetString("Event_HideCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide Event ähnelt.
        /// </summary>
        internal static string Event_HideEvent {
            get {
                return ResourceManager.GetString("Event_HideEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Palawadan, Jewel of Istan ähnelt.
        /// </summary>
        internal static string event_istan_palawadan {
            get {
                return ResourceManager.GetString("event-istan-palawadan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dangerous Prey ähnelt.
        /// </summary>
        internal static string event_jahai_dangerousPrey {
            get {
                return ResourceManager.GetString("event-jahai-dangerousPrey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Death-Branded Shatterer ähnelt.
        /// </summary>
        internal static string event_jahai_deathBrandedShatterer {
            get {
                return ResourceManager.GetString("event-jahai-deathBrandedShatterer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Loamhurst ähnelt.
        /// </summary>
        internal static string event_lakeDoric_newLoamhurst {
            get {
                return ResourceManager.GetString("event-lakeDoric-newLoamhurst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Noran&apos;s Homestead ähnelt.
        /// </summary>
        internal static string event_lakeDoric_noransHomestead {
            get {
                return ResourceManager.GetString("event-lakeDoric-noransHomestead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saidra&apos;s Haven ähnelt.
        /// </summary>
        internal static string event_lakeDoric_saidrasHaven {
            get {
                return ResourceManager.GetString("event-lakeDoric-saidrasHaven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ley-Line Anomaly (Gendarran Fields) ähnelt.
        /// </summary>
        internal static string event_leyLineAnomaly_llaGF {
            get {
                return ResourceManager.GetString("event-leyLineAnomaly-llaGF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ley-Line Anomaly (Iron Marches) ähnelt.
        /// </summary>
        internal static string event_leyLineAnomaly_llaIM {
            get {
                return ResourceManager.GetString("event-leyLineAnomaly-llaIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ley-Line Anomaly (Timberline Falls) ähnelt.
        /// </summary>
        internal static string event_leyLineAnomaly_llaTF {
            get {
                return ResourceManager.GetString("event-leyLineAnomaly-llaTF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kaineng Blackout ähnelt.
        /// </summary>
        internal static string event_newKainengCity_kainengBlackout {
            get {
                return ResourceManager.GetString("event-newKainengCity-kainengBlackout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Waypoint found! ähnelt.
        /// </summary>
        internal static string Event_NoWaypointFound {
            get {
                return ResourceManager.GetString("Event_NoWaypointFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Wiki ähnelt.
        /// </summary>
        internal static string Event_OpenWiki {
            get {
                return ResourceManager.GetString("Event_OpenWiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Balthazar&apos;s Brawl ähnelt.
        /// </summary>
        internal static string event_pvpTournaments_balthazarsBrawl {
            get {
                return ResourceManager.GetString("event-pvpTournaments-balthazarsBrawl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grenth&apos;s Game ähnelt.
        /// </summary>
        internal static string event_pvpTournaments_grenthsGame {
            get {
                return ResourceManager.GetString("event-pvpTournaments-grenthsGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lyssa&apos;s Legions ähnelt.
        /// </summary>
        internal static string event_pvpTournaments_lyssasLegions {
            get {
                return ResourceManager.GetString("event-pvpTournaments-lyssasLegions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Melandru&apos;s Matchup ähnelt.
        /// </summary>
        internal static string event_pvpTournaments_melandrusMatchup {
            get {
                return ResourceManager.GetString("event-pvpTournaments-melandrusMatchup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aetherblade Assault ähnelt.
        /// </summary>
        internal static string event_seitungProvince_aetherbladeAssault {
            get {
                return ResourceManager.GetString("event-seitungProvince-aetherbladeAssault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server Reset ähnelt.
        /// </summary>
        internal static string event_serverReset_serverReset {
            get {
                return ResourceManager.GetString("event-serverReset-serverReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chak Gerent ähnelt.
        /// </summary>
        internal static string event_tangledDepth_chakGerent {
            get {
                return ResourceManager.GetString("event-tangledDepth-chakGerent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Aspenwood ähnelt.
        /// </summary>
        internal static string event_theEchovaldWilds_aspenwood {
            get {
                return ResourceManager.GetString("event-theEchovaldWilds-aspenwood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gang War ähnelt.
        /// </summary>
        internal static string event_theEchovaldWilds_gangWar {
            get {
                return ResourceManager.GetString("event-theEchovaldWilds-gangWar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Oil Floes ähnelt.
        /// </summary>
        internal static string event_thunderheadPeaks_theOilFloes {
            get {
                return ResourceManager.GetString("event-thunderheadPeaks-theOilFloes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thunderhead Keep ähnelt.
        /// </summary>
        internal static string event_thunderheadPeaks_thunderheadKeep {
            get {
                return ResourceManager.GetString("event-thunderheadPeaks-thunderheadKeep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished since ähnelt.
        /// </summary>
        internal static string Event_Tooltip_FinishedSince {
            get {
                return ResourceManager.GetString("Event_Tooltip_FinishedSince", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remaining ähnelt.
        /// </summary>
        internal static string Event_Tooltip_Remaining {
            get {
                return ResourceManager.GetString("Event_Tooltip_Remaining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starts at ähnelt.
        /// </summary>
        internal static string Event_Tooltip_StartsAt {
            get {
                return ResourceManager.GetString("Event_Tooltip_StartsAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Starts in ähnelt.
        /// </summary>
        internal static string Event_Tooltip_StartsIn {
            get {
                return ResourceManager.GetString("Event_Tooltip_StartsIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forged with Fire ähnelt.
        /// </summary>
        internal static string event_vabbi_forgedWithFire {
            get {
                return ResourceManager.GetString("event-vabbi-forgedWithFire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Serpents&apos; Ire ähnelt.
        /// </summary>
        internal static string event_vabbi_serpentsIre {
            get {
                return ResourceManager.GetString("event-vabbi-serpentsIre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Night and the Enemy ähnelt.
        /// </summary>
        internal static string event_verdantBrink_nightAndTheEnemy {
            get {
                return ResourceManager.GetString("event-verdantBrink-nightAndTheEnemy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Night Bosses ähnelt.
        /// </summary>
        internal static string event_verdantBrink_nightBosses {
            get {
                return ResourceManager.GetString("event-verdantBrink-nightBosses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Securing Verdant Brink ähnelt.
        /// </summary>
        internal static string event_verdantBrink_securingVerdantBrink {
            get {
                return ResourceManager.GetString("event-verdantBrink-securingVerdantBrink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waypoint copied to clipboard! ähnelt.
        /// </summary>
        internal static string Event_WaypointCopied {
            get {
                return ResourceManager.GetString("Event_WaypointCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Claw of Jormag ähnelt.
        /// </summary>
        internal static string event_worldBosses_clawOfJormag {
            get {
                return ResourceManager.GetString("event-worldBosses-clawOfJormag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fire Elemental ähnelt.
        /// </summary>
        internal static string event_worldBosses_fireElemental {
            get {
                return ResourceManager.GetString("event-worldBosses-fireElemental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inquest Golem Mark II ähnelt.
        /// </summary>
        internal static string event_worldBosses_golemMarkII {
            get {
                return ResourceManager.GetString("event-worldBosses-golemMarkII", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Great Jungle Wurm ähnelt.
        /// </summary>
        internal static string event_worldBosses_greatJungleWurm {
            get {
                return ResourceManager.GetString("event-worldBosses-greatJungleWurm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Megadestroyer ähnelt.
        /// </summary>
        internal static string event_worldBosses_megadestoryer {
            get {
                return ResourceManager.GetString("event-worldBosses-megadestoryer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modniir Ulgoth ähnelt.
        /// </summary>
        internal static string event_worldBosses_modniirUlgoth {
            get {
                return ResourceManager.GetString("event-worldBosses-modniirUlgoth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shadow Behemoth ähnelt.
        /// </summary>
        internal static string event_worldBosses_shadowBehemoth {
            get {
                return ResourceManager.GetString("event-worldBosses-shadowBehemoth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Svanir Shaman Chief ähnelt.
        /// </summary>
        internal static string event_worldBosses_svanirShamanChief {
            get {
                return ResourceManager.GetString("event-worldBosses-svanirShamanChief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Admiral Taidha Covington ähnelt.
        /// </summary>
        internal static string event_worldBosses_taidha {
            get {
                return ResourceManager.GetString("event-worldBosses-taidha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Shatterer ähnelt.
        /// </summary>
        internal static string event_worldBosses_theShatterer {
            get {
                return ResourceManager.GetString("event-worldBosses-theShatterer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Evolved Jungle Wurm ähnelt.
        /// </summary>
        internal static string event_worldBossesHardcore_evolvedJungleWurm {
            get {
                return ResourceManager.GetString("event-worldBossesHardcore-evolvedJungleWurm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Karka Queen ähnelt.
        /// </summary>
        internal static string event_worldBossesHardcore_karkaQueen {
            get {
                return ResourceManager.GetString("event-worldBossesHardcore-karkaQueen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tequatl the Sunless ähnelt.
        /// </summary>
        internal static string event_worldBossesHardcore_tequatl {
            get {
                return ResourceManager.GetString("event-worldBossesHardcore-tequatl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auric Basin ähnelt.
        /// </summary>
        internal static string eventCategory_auricBasin {
            get {
                return ResourceManager.GetString("eventCategory-auricBasin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bjora Marches ähnelt.
        /// </summary>
        internal static string eventCategory_bjoraMarches {
            get {
                return ResourceManager.GetString("eventCategory-bjoraMarches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cantha: Day-Night Cycle ähnelt.
        /// </summary>
        internal static string eventCategory_canthaDayNight {
            get {
                return ResourceManager.GetString("eventCategory-canthaDayNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Crystal Oasis ähnelt.
        /// </summary>
        internal static string eventCategory_crystalOasis {
            get {
                return ResourceManager.GetString("eventCategory-crystalOasis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Day-Night Cycle ähnelt.
        /// </summary>
        internal static string eventCategory_dayNightCycle {
            get {
                return ResourceManager.GetString("eventCategory-dayNightCycle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Desert Highland ähnelt.
        /// </summary>
        internal static string eventCategory_desertHighland {
            get {
                return ResourceManager.GetString("eventCategory-desertHighland", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Desolation ähnelt.
        /// </summary>
        internal static string eventCategory_desolation {
            get {
                return ResourceManager.GetString("eventCategory-desolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dragon Bash ähnelt.
        /// </summary>
        internal static string eventCategory_dragonBash {
            get {
                return ResourceManager.GetString("eventCategory-dragonBash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dragon&apos;s End ähnelt.
        /// </summary>
        internal static string eventCategory_dragonsEnd {
            get {
                return ResourceManager.GetString("eventCategory-dragonsEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dragon Stand ähnelt.
        /// </summary>
        internal static string eventCategory_dragonStand {
            get {
                return ResourceManager.GetString("eventCategory-dragonStand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dry Top ähnelt.
        /// </summary>
        internal static string eventCategory_dryTop {
            get {
                return ResourceManager.GetString("eventCategory-dryTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elon Riverlands ähnelt.
        /// </summary>
        internal static string eventCategory_elonRiverlands {
            get {
                return ResourceManager.GetString("eventCategory-elonRiverlands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eye of the North ähnelt.
        /// </summary>
        internal static string eventCategory_eotn {
            get {
                return ResourceManager.GetString("eventCategory-eotn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Festival of the Four Winds ähnelt.
        /// </summary>
        internal static string eventCategory_festivalOfTheFourWinds {
            get {
                return ResourceManager.GetString("eventCategory-festivalOfTheFourWinds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grothmar Valley ähnelt.
        /// </summary>
        internal static string eventCategory_grothmar {
            get {
                return ResourceManager.GetString("eventCategory-grothmar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Halloween ähnelt.
        /// </summary>
        internal static string eventCategory_halloween {
            get {
                return ResourceManager.GetString("eventCategory-halloween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Domain of Istan ähnelt.
        /// </summary>
        internal static string eventCategory_istan {
            get {
                return ResourceManager.GetString("eventCategory-istan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Jahai Bluffs ähnelt.
        /// </summary>
        internal static string eventCategory_jahai {
            get {
                return ResourceManager.GetString("eventCategory-jahai", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lake Doric ähnelt.
        /// </summary>
        internal static string eventCategory_lakeDoric {
            get {
                return ResourceManager.GetString("eventCategory-lakeDoric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ley Line Anomaly ähnelt.
        /// </summary>
        internal static string eventCategory_leyLineAnomaly {
            get {
                return ResourceManager.GetString("eventCategory-leyLineAnomaly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Kaineng City ähnelt.
        /// </summary>
        internal static string eventCategory_newKainengCity {
            get {
                return ResourceManager.GetString("eventCategory-newKainengCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PvP Automated Tournaments ähnelt.
        /// </summary>
        internal static string eventCategory_pvpTournaments {
            get {
                return ResourceManager.GetString("eventCategory-pvpTournaments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seitung Province ähnelt.
        /// </summary>
        internal static string eventCategory_seitungProvince {
            get {
                return ResourceManager.GetString("eventCategory-seitungProvince", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server Reset ähnelt.
        /// </summary>
        internal static string eventCategory_serverReset {
            get {
                return ResourceManager.GetString("eventCategory-serverReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tangled Depth ähnelt.
        /// </summary>
        internal static string eventCategory_tangledDepth {
            get {
                return ResourceManager.GetString("eventCategory-tangledDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Echovald Wilds ähnelt.
        /// </summary>
        internal static string eventCategory_theEchovaldWilds {
            get {
                return ResourceManager.GetString("eventCategory-theEchovaldWilds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thunderhead Peaks ähnelt.
        /// </summary>
        internal static string eventCategory_thunderheadPeaks {
            get {
                return ResourceManager.GetString("eventCategory-thunderheadPeaks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vabbi ähnelt.
        /// </summary>
        internal static string eventCategory_vabbi {
            get {
                return ResourceManager.GetString("eventCategory-vabbi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verdant Brink ähnelt.
        /// </summary>
        internal static string eventCategory_verdantBrink {
            get {
                return ResourceManager.GetString("eventCategory-verdantBrink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die World Bosses ähnelt.
        /// </summary>
        internal static string eventCategory_worldBosses {
            get {
                return ResourceManager.GetString("eventCategory-worldBosses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hard World Bosses ähnelt.
        /// </summary>
        internal static string eventCategory_worldBossesHardcore {
            get {
                return ResourceManager.GetString("eventCategory-worldBossesHardcore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Version ähnelt.
        /// </summary>
        internal static string EventSettingsView_CurrentVersion_Title {
            get {
                return ResourceManager.GetString("EventSettingsView_CurrentVersion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        internal static string EventSettingsView_CurrentVersion_Unknown {
            get {
                return ResourceManager.GetString("EventSettingsView_CurrentVersion_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Newest Version ähnelt.
        /// </summary>
        internal static string EventSettingsView_NewestVersion_Title {
            get {
                return ResourceManager.GetString("EventSettingsView_NewestVersion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        internal static string EventSettingsView_NewestVersion_Unknown {
            get {
                return ResourceManager.GetString("EventSettingsView_NewestVersion_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Events reloaded! ähnelt.
        /// </summary>
        internal static string EventSettingsView_ReloadEvents_Success {
            get {
                return ResourceManager.GetString("EventSettingsView_ReloadEvents_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reload Events ähnelt.
        /// </summary>
        internal static string EventSettingsView_ReloadEvents_Title {
            get {
                return ResourceManager.GetString("EventSettingsView_ReloadEvents_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event states cleared! ähnelt.
        /// </summary>
        internal static string EventSettingsView_ResetEventStates_Success {
            get {
                return ResourceManager.GetString("EventSettingsView_ResetEventStates_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset event states ähnelt.
        /// </summary>
        internal static string EventSettingsView_ResetEventStates_Title {
            get {
                return ResourceManager.GetString("EventSettingsView_ResetEventStates_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully updated! ähnelt.
        /// </summary>
        internal static string EventSettingsView_UpdateEventFile_Success {
            get {
                return ResourceManager.GetString("EventSettingsView_UpdateEventFile_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Event File ähnelt.
        /// </summary>
        internal static string EventSettingsView_UpdateEventFile_Title {
            get {
                return ResourceManager.GetString("EventSettingsView_UpdateEventFile_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Events ähnelt.
        /// </summary>
        internal static string ManageEventsView_AllEvents {
            get {
                return ResourceManager.GetString("ManageEventsView_AllEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check all ähnelt.
        /// </summary>
        internal static string ManageEventsView_CheckAll {
            get {
                return ResourceManager.GetString("ManageEventsView_CheckAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Categories ähnelt.
        /// </summary>
        internal static string ManageEventsView_EventCategories_Title {
            get {
                return ResourceManager.GetString("ManageEventsView_EventCategories_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search ähnelt.
        /// </summary>
        internal static string ManageEventsView_SearchBox_Placeholder {
            get {
                return ResourceManager.GetString("ManageEventsView_SearchBox_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Uncheck all ähnelt.
        /// </summary>
        internal static string ManageEventsView_UncheckAll {
            get {
                return ResourceManager.GetString("ManageEventsView_UncheckAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click to copy waypoint ähnelt.
        /// </summary>
        internal static string ManageEventsView_Waypoint_Description {
            get {
                return ResourceManager.GetString("ManageEventsView_Waypoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Waypoint ähnelt.
        /// </summary>
        internal static string ManageEventsView_Waypoint_Title {
            get {
                return ResourceManager.GetString("ManageEventsView_Waypoint_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click to open wiki ähnelt.
        /// </summary>
        internal static string ManageEventsView_Wiki_Description {
            get {
                return ResourceManager.GetString("ManageEventsView_Wiki_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wiki ähnelt.
        /// </summary>
        internal static string ManageEventsView_Wiki_Title {
            get {
                return ResourceManager.GetString("ManageEventsView_Wiki_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset ähnelt.
        /// </summary>
        internal static string ReorderEventsView_Reset {
            get {
                return ResourceManager.GetString("ReorderEventsView_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        internal static string ReorderEventsView_Save {
            get {
                return ResourceManager.GetString("ReorderEventsView_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successful reordered categories! ähnelt.
        /// </summary>
        internal static string ReorderEventsView_Save_Success {
            get {
                return ResourceManager.GetString("ReorderEventsView_Save_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should automatically update the exported event file to the newest version. ähnelt.
        /// </summary>
        internal static string Setting_AutomaticallyUpdateEventFile_Description {
            get {
                return ResourceManager.GetString("Setting_AutomaticallyUpdateEventFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically Update Event File ähnelt.
        /// </summary>
        internal static string Setting_AutomaticallyUpdateEventFile_Name {
            get {
                return ResourceManager.GetString("Setting_AutomaticallyUpdateEventFile_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the background color. ähnelt.
        /// </summary>
        internal static string Setting_BackgroundColor_Description {
            get {
                return ResourceManager.GetString("Setting_BackgroundColor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background Color ähnelt.
        /// </summary>
        internal static string Setting_BackgroundColor_Name {
            get {
                return ResourceManager.GetString("Setting_BackgroundColor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the opacity of the background. ähnelt.
        /// </summary>
        internal static string Setting_BackgroundColorOpacity_Description {
            get {
                return ResourceManager.GetString("Setting_BackgroundColorOpacity_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Background Color Opacity ähnelt.
        /// </summary>
        internal static string Setting_BackgroundColorOpacity_Name {
            get {
                return ResourceManager.GetString("Setting_BackgroundColorOpacity_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should be build from the top or the bottom. ähnelt.
        /// </summary>
        internal static string Setting_BuildDirection_Description {
            get {
                return ResourceManager.GetString("Setting_BuildDirection_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Build Direction ähnelt.
        /// </summary>
        internal static string Setting_BuildDirection_Name {
            get {
                return ResourceManager.GetString("Setting_BuildDirection_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should be running in debug mode. ähnelt.
        /// </summary>
        internal static string Setting_DebugEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_DebugEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug Enabled ähnelt.
        /// </summary>
        internal static string Setting_DebugEnabled_Name {
            get {
                return ResourceManager.GetString("Setting_DebugEnabled_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should directly teleport to the selected waypoint after navigating to it. ähnelt.
        /// </summary>
        internal static string Setting_DirectlyTeleportToWaypoint_Description {
            get {
                return ResourceManager.GetString("Setting_DirectlyTeleportToWaypoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directly Teleport to Waypoint ähnelt.
        /// </summary>
        internal static string Setting_DirectlyTeleportToWaypoint_Title {
            get {
                return ResourceManager.GetString("Setting_DirectlyTeleportToWaypoint_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the events should have a small border. ähnelt.
        /// </summary>
        internal static string Setting_DrawEventBorder_Description {
            get {
                return ResourceManager.GetString("Setting_DrawEventBorder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Draw Event Border ähnelt.
        /// </summary>
        internal static string Setting_DrawEventBorder_Name {
            get {
                return ResourceManager.GetString("Setting_DrawEventBorder_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the action when an event has been completed. ähnelt.
        /// </summary>
        internal static string Setting_EventCompletedAction_Description {
            get {
                return ResourceManager.GetString("Setting_EventCompletedAction_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Completed Action ähnelt.
        /// </summary>
        internal static string Setting_EventCompletedAction_Name {
            get {
                return ResourceManager.GetString("Setting_EventCompletedAction_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the size of the font used for events. ähnelt.
        /// </summary>
        internal static string Setting_EventFontSize_Description {
            get {
                return ResourceManager.GetString("Setting_EventFontSize_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Font Size ähnelt.
        /// </summary>
        internal static string Setting_EventFontSize_Name {
            get {
                return ResourceManager.GetString("Setting_EventFontSize_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the height of a single event row. ähnelt.
        /// </summary>
        internal static string Setting_EventHeight_Description {
            get {
                return ResourceManager.GetString("Setting_EventHeight_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Height ähnelt.
        /// </summary>
        internal static string Setting_EventHeight_Name {
            get {
                return ResourceManager.GetString("Setting_EventHeight_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines how much history the timespan should contain. ähnelt.
        /// </summary>
        internal static string Setting_EventHistorySplit_Description {
            get {
                return ResourceManager.GetString("Setting_EventHistorySplit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event History Split ähnelt.
        /// </summary>
        internal static string Setting_EventHistorySplit_Name {
            get {
                return ResourceManager.GetString("Setting_EventHistorySplit_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The timespan the event table should cover (in minutes). ähnelt.
        /// </summary>
        internal static string Setting_EventTimeSpan_Description {
            get {
                return ResourceManager.GetString("Setting_EventTimeSpan_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Timespan ähnelt.
        /// </summary>
        internal static string Setting_EventTimeSpan_Name {
            get {
                return ResourceManager.GetString("Setting_EventTimeSpan_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Timespan &apos;{0}&apos; no real number. ähnelt.
        /// </summary>
        internal static string Setting_EventTimeSpan_Validation_NoDouble {
            get {
                return ResourceManager.GetString("Setting_EventTimeSpan_Validation_NoDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Timespan is bigger than {0} minutes. Cap at {0} for performance reasons. ähnelt.
        /// </summary>
        internal static string Setting_EventTimeSpan_Validation_OverLimit {
            get {
                return ResourceManager.GetString("Setting_EventTimeSpan_Validation_OverLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the text color of filler events. ähnelt.
        /// </summary>
        internal static string Setting_FillerTextColor_Description {
            get {
                return ResourceManager.GetString("Setting_FillerTextColor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Filler Text Color ähnelt.
        /// </summary>
        internal static string Setting_FillerTextColor_Name {
            get {
                return ResourceManager.GetString("Setting_FillerTextColor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should be displayed. ähnelt.
        /// </summary>
        internal static string Setting_GlobalEnabled_Description {
            get {
                return ResourceManager.GetString("Setting_GlobalEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Table Enabled ähnelt.
        /// </summary>
        internal static string Setting_GlobalEnabled_Name {
            get {
                return ResourceManager.GetString("Setting_GlobalEnabled_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The keybinding which will toggle the event table. ähnelt.
        /// </summary>
        internal static string Setting_GlobalEnabledHotkey_Description {
            get {
                return ResourceManager.GetString("Setting_GlobalEnabledHotkey_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Table Hotkey ähnelt.
        /// </summary>
        internal static string Setting_GlobalEnabledHotkey_Name {
            get {
                return ResourceManager.GetString("Setting_GlobalEnabledHotkey_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should execute the specified action on left click. ähnelt.
        /// </summary>
        internal static string Setting_HandleLeftClick_Description {
            get {
                return ResourceManager.GetString("Setting_HandleLeftClick_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Handle Left Click ähnelt.
        /// </summary>
        internal static string Setting_HandleLeftClick_Name {
            get {
                return ResourceManager.GetString("Setting_HandleLeftClick_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should hide when the player is in combat. ähnelt.
        /// </summary>
        internal static string Setting_HideInCombat_Description {
            get {
                return ResourceManager.GetString("Setting_HideInCombat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide in Combat ähnelt.
        /// </summary>
        internal static string Setting_HideInCombat_Name {
            get {
                return ResourceManager.GetString("Setting_HideInCombat_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should hide when the map is open. ähnelt.
        /// </summary>
        internal static string Setting_HideOnMap_Description {
            get {
                return ResourceManager.GetString("Setting_HideOnMap_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide on open Map ähnelt.
        /// </summary>
        internal static string Setting_HideOnMap_Name {
            get {
                return ResourceManager.GetString("Setting_HideOnMap_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should hide when cutscenes are played. ähnelt.
        /// </summary>
        internal static string Setting_HideOnMissingMumbleTicks_Description {
            get {
                return ResourceManager.GetString("Setting_HideOnMissingMumbleTicks_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide on Cutscenes ähnelt.
        /// </summary>
        internal static string Setting_HideOnMissingMumbleTicks_Name {
            get {
                return ResourceManager.GetString("Setting_HideOnMissingMumbleTicks_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the action, which is executed on left clicks. ähnelt.
        /// </summary>
        internal static string Setting_LeftClickAction_Description {
            get {
                return ResourceManager.GetString("Setting_LeftClickAction_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left Click Action ähnelt.
        /// </summary>
        internal static string Setting_LeftClickAction_Title {
            get {
                return ResourceManager.GetString("Setting_LeftClickAction_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Where the event table should be displayed on the X axis. ähnelt.
        /// </summary>
        internal static string Setting_LocationX_Description {
            get {
                return ResourceManager.GetString("Setting_LocationX_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location X ähnelt.
        /// </summary>
        internal static string Setting_LocationX_Name {
            get {
                return ResourceManager.GetString("Setting_LocationX_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Where the event table should be displayed on the Y axis. ähnelt.
        /// </summary>
        internal static string Setting_LocationY_Description {
            get {
                return ResourceManager.GetString("Setting_LocationY_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location Y ähnelt.
        /// </summary>
        internal static string Setting_LocationY_Name {
            get {
                return ResourceManager.GetString("Setting_LocationY_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the opacity of the event table. ähnelt.
        /// </summary>
        internal static string Setting_Opacity_Description {
            get {
                return ResourceManager.GetString("Setting_Opacity_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity ähnelt.
        /// </summary>
        internal static string Setting_Opacity_Name {
            get {
                return ResourceManager.GetString("Setting_Opacity_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the delay for refreshing the event table drawings.
        ///Min: {0}ms
        ///Max: {1}ms ähnelt.
        /// </summary>
        internal static string Setting_RefreshRateDelay_Description {
            get {
                return ResourceManager.GetString("Setting_RefreshRateDelay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh Rate Delay ähnelt.
        /// </summary>
        internal static string Setting_RefreshRateDelay_Title {
            get {
                return ResourceManager.GetString("Setting_RefreshRateDelay_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should add it&apos;s own corner icon to access settings. ähnelt.
        /// </summary>
        internal static string Setting_RegisterCornerIcon_Description {
            get {
                return ResourceManager.GetString("Setting_RegisterCornerIcon_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Register Corner Icon ähnelt.
        /// </summary>
        internal static string Setting_RegisterCornerIcon_Name {
            get {
                return ResourceManager.GetString("Setting_RegisterCornerIcon_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should show a context menu if an event has been right clicked. ähnelt.
        /// </summary>
        internal static string Setting_ShowContextMenuOnClick_Description {
            get {
                return ResourceManager.GetString("Setting_ShowContextMenuOnClick_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Context Menu ähnelt.
        /// </summary>
        internal static string Setting_ShowContextMenuOnClick_Name {
            get {
                return ResourceManager.GetString("Setting_ShowContextMenuOnClick_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should display event information on hover. ähnelt.
        /// </summary>
        internal static string Setting_ShowTooltips_Description {
            get {
                return ResourceManager.GetString("Setting_ShowTooltips_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Tooltips ähnelt.
        /// </summary>
        internal static string Setting_ShowTooltips_Name {
            get {
                return ResourceManager.GetString("Setting_ShowTooltips_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the text color of events. ähnelt.
        /// </summary>
        internal static string Setting_TextColor_Description {
            get {
                return ResourceManager.GetString("Setting_TextColor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text Color ähnelt.
        /// </summary>
        internal static string Setting_TextColor_Name {
            get {
                return ResourceManager.GetString("Setting_TextColor_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the mode in which the tooltip times are displayed. ähnelt.
        /// </summary>
        internal static string Setting_TooltipTimeMode_Description {
            get {
                return ResourceManager.GetString("Setting_TooltipTimeMode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tooltip Time Mode ähnelt.
        /// </summary>
        internal static string Setting_TooltipTimeMode_Name {
            get {
                return ResourceManager.GetString("Setting_TooltipTimeMode_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should use the build in translation for events. Needs reload. ähnelt.
        /// </summary>
        internal static string Setting_UseEventTranslation_Description {
            get {
                return ResourceManager.GetString("Setting_UseEventTranslation_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Event Translation ähnelt.
        /// </summary>
        internal static string Setting_UseEventTranslation_Name {
            get {
                return ResourceManager.GetString("Setting_UseEventTranslation_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event table should fill empty spaces with filler events. ähnelt.
        /// </summary>
        internal static string Setting_UseFiller_Description {
            get {
                return ResourceManager.GetString("Setting_UseFiller_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Filler Events ähnelt.
        /// </summary>
        internal static string Setting_UseFiller_Name {
            get {
                return ResourceManager.GetString("Setting_UseFiller_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the event fillers should have names. ähnelt.
        /// </summary>
        internal static string Setting_UseFillerEventNames_Description {
            get {
                return ResourceManager.GetString("Setting_UseFillerEventNames_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use Filler Event Names ähnelt.
        /// </summary>
        internal static string Setting_UseFillerEventNames_Name {
            get {
                return ResourceManager.GetString("Setting_UseFillerEventNames_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The width of the event table. ähnelt.
        /// </summary>
        internal static string Setting_Width_Description {
            get {
                return ResourceManager.GetString("Setting_Width_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Width ähnelt.
        /// </summary>
        internal static string Setting_Width_Name {
            get {
                return ResourceManager.GetString("Setting_Width_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Settings ähnelt.
        /// </summary>
        internal static string SettingsView_OpenSettings {
            get {
                return ResourceManager.GetString("SettingsView_OpenSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Settings ähnelt.
        /// </summary>
        internal static string SettingsWindow_EventSettings_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_EventSettings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Settings ähnelt.
        /// </summary>
        internal static string SettingsWindow_GeneralSettings_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_GeneralSettings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Graphic Settings ähnelt.
        /// </summary>
        internal static string SettingsWindow_GraphicSettings_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_GraphicSettings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manage Events ähnelt.
        /// </summary>
        internal static string SettingsWindow_ManageEvents_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_ManageEvents_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reorder ähnelt.
        /// </summary>
        internal static string SettingsWindow_ReorderSettings_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_ReorderSettings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        internal static string SettingsWindow_Subtitle {
            get {
                return ResourceManager.GetString("SettingsWindow_Subtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Event Table ähnelt.
        /// </summary>
        internal static string SettingsWindow_Title {
            get {
                return ResourceManager.GetString("SettingsWindow_Title", resourceCulture);
            }
        }
    }
}
