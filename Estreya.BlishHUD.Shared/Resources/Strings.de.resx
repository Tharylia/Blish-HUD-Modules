<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BaseSettingsView_AddingColorsToColorPicker" xml:space="preserve">
    <value>Füge Farben zur Farbauswahl hinzu...</value>
  </data>
  <data name="BaseSettingsView_LoadingColorPicker" xml:space="preserve">
    <value>Lade Farbauswahl...</value>
  </data>
  <data name="BaseSettingsView_LoadingColors" xml:space="preserve">
    <value>Lade Farben...</value>
  </data>
  <data name="SettingsWindow_Subtitle" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="Setting_BackgroundColorOpacity_Description" xml:space="preserve">
    <value>Gibt an, welche Deckkraft die Hintergrund-Farbe haben soll.</value>
  </data>
  <data name="Setting_BackgroundColorOpacity_Name" xml:space="preserve">
    <value>Hintergrund-Farbe Deckkraft</value>
  </data>
  <data name="Setting_BackgroundColor_Description" xml:space="preserve">
    <value>Gibt an, welche Hintergrund-Farbe das Modul haben soll.</value>
  </data>
  <data name="Setting_BackgroundColor_Name" xml:space="preserve">
    <value>Hintergrund-Farbe</value>
  </data>
  <data name="Setting_BuildDirection_Description" xml:space="preserve">
    <value>Gibt an, in welche Richtung das Modul gebaut werden soll.</value>
  </data>
  <data name="Setting_BuildDirection_Name" xml:space="preserve">
    <value>Baurichtung</value>
  </data>
  <data name="Setting_DebugEnabled_Description" xml:space="preserve">
    <value>Gibt an, ob das Modul im Modus Debug läuft.</value>
  </data>
  <data name="Setting_DebugEnabled_Name" xml:space="preserve">
    <value>Debug aktiviert</value>
  </data>
  <data name="Setting_FontSize_Description" xml:space="preserve">
    <value>Gibt die Schriftgröße des Moduls an.</value>
  </data>
  <data name="Setting_FontSize_Name" xml:space="preserve">
    <value>Schriftgröße</value>
  </data>
  <data name="Setting_GlobalEnabledHotkey_Description" xml:space="preserve">
    <value>Gibt an, mit welcher Tastenkombination das Modul an- und ausgeschaltet werden kann.</value>
  </data>
  <data name="Setting_GlobalEnabledHotkey_Name" xml:space="preserve">
    <value>Modul Hotkey</value>
  </data>
  <data name="Setting_GlobalEnabled_Description" xml:space="preserve">
    <value>Gibt an, ob das Modul angezeigt werden soll.</value>
  </data>
  <data name="Setting_GlobalEnabled_Name" xml:space="preserve">
    <value>Modul aktiviert</value>
  </data>
  <data name="Setting_HideInCombat_Description" xml:space="preserve">
    <value>Gibt an, ob das Modul sich im Kampf ausblenden soll.</value>
  </data>
  <data name="Setting_HideInCombat_Name" xml:space="preserve">
    <value>Im Kampf ausblenden</value>
  </data>
  <data name="Setting_HideOnMap_Description" xml:space="preserve">
    <value>Gibt an, ob das Modul sich bei geöffneter Karte ausblenden soll.</value>
  </data>
  <data name="Setting_HideOnMap_Name" xml:space="preserve">
    <value>Bei geöffneter Karte ausblenden</value>
  </data>
  <data name="Setting_HideOnMissingMumbleTicks_Description" xml:space="preserve">
    <value>Gibt an,  ob das Modul sich bei Zwischensequenzen ausblenden soll.</value>
  </data>
  <data name="Setting_HideOnMissingMumbleTicks_Name" xml:space="preserve">
    <value>Bei Zwischensequenzen ausblenden</value>
  </data>
  <data name="Setting_LocationX_Description" xml:space="preserve">
    <value>Gibt an, welche Position das Modul aus der X-Axe hat.</value>
  </data>
  <data name="Setting_LocationX_Name" xml:space="preserve">
    <value>X Position</value>
  </data>
  <data name="Setting_LocationY_Description" xml:space="preserve">
    <value>Gibt an, welche Position das Modul aus der Y-Axe hat.</value>
  </data>
  <data name="Setting_LocationY_Name" xml:space="preserve">
    <value>Y Position</value>
  </data>
  <data name="Setting_Opacity_Description" xml:space="preserve">
    <value>Gibt an, welche Deckkraft das Modul haben soll.</value>
  </data>
  <data name="Setting_Opacity_Name" xml:space="preserve">
    <value>Deckkraft</value>
  </data>
  <data name="Setting_RegisterCornerIcon_Description" xml:space="preserve">
    <value>Gibt an, ob das Modul ein Corner Icon anzeigen soll.</value>
  </data>
  <data name="Setting_RegisterCornerIcon_Name" xml:space="preserve">
    <value>Eck-Icon anzeigen</value>
  </data>
  <data name="Setting_Width_Description" xml:space="preserve">
    <value>Gibt an, welche Breite das Modul hat.</value>
  </data>
  <data name="Setting_Width_Name" xml:space="preserve">
    <value>Breite</value>
  </data>
</root>